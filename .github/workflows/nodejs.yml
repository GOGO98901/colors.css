name: Node.js CI

on:
  schedule:
  - cron: "0 2 * * *"
  push:
    branches: ["*"]
  pull_request:
    branches: ["main"]

jobs:
  decideCanBuild:
    name: Can Build Run?
    runs-on: ubuntu-latest
    outputs:
      decision: ${{ steps.decision.outputs.decision }}
    steps:
    - uses: actions/checkout@v2
    - name: Decide
      id: decision
      run: |
        if [ "${{ github.event_name }}" == "push" ]; then
          message=$(git show -s --format=%B)
          regex='^Updates version to.*'
          if [[ $messgae =~ $regex ]]; then
            echo "::set-output name=decision::false"
          else
            echo "::set-output name=decision::true"
          fi
        else
          echo "::set-output name=decision::true"
        fi

  build:
    needs: decideCanBuild
    if: needs.decideCanBuild.outputs.decision == true
    runs-on: ubuntu-latest
    outputs:
      hasChanged: ${{ steps.changes.outputs.changed }}
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 12
      uses: actions/setup-node@v1
      with:
        node-version: 12
    - name: Install Dependencies
      run: npm ci
    - name: Lint Typescript
      continue-on-error: true
      run: npm run lint
    - name: Build Package
      run: npm run start
    - name: Test
      run: npm test
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        path: dist/**
    - name: Set Has Changed
      id: changes
      uses: UnicornGlobal/has-changes-action@v1.0.11

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main' && needs.build.outputs.hasChanged == 1
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 12
      uses: actions/setup-node@v1
      with:
        node-version: 12
    - run: npm ci
    - name: Build Package
      run: npm run start
    - name: Commit Changes
      run: |
        git config --local user.email "2751799+roryclaasen@users.noreply.github.com"
        git config --local user.name "Rory Claasen [Bot]"
        now=$(date)
        git add readme.md
        git commit -m "Updates readme with latest changes"
        version=$(npm version patch)
        git reset --soft HEAD~2
        git commit -m "Updates version to $version"
        git tag -fa $version -m $version
    - name: Push Changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: main
        tags: true
